# Generated by Django 3.0.5 on 2020-04-26 16:19

from django.db import migrations, models
import django.db.models.deletion
import musik_lib.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('duration', models.DurationField()),
                ('released_year', models.PositiveSmallIntegerField(validators=[musik_lib.validators.validate_year])),
                ('artist', models.ManyToManyField(related_name='main_artist', to='musik_lib.Artist')),
                ('featuring', models.ManyToManyField(related_name='featured_artist', to='musik_lib.Artist')),
            ],
        ),
        migrations.CreateModel(
            name='DuplicateTrack',
            fields=[
                ('track', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='musik_lib.Track')),
                ('frequency', models.PositiveSmallIntegerField(default=2)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryStat',
            fields=[
                ('library', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='musik_lib.Library')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('nick_name', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=2000)),
                ('created_year', models.PositiveSmallIntegerField(validators=[musik_lib.validators.validate_year])),
                ('ordinal', models.PositiveSmallIntegerField(unique=True)),
                ('track', models.ManyToManyField(to='musik_lib.Track')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionStat',
            fields=[
                ('collection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='musik_lib.Collection')),
                ('duplicate_tracks', models.ManyToManyField(to='musik_lib.DuplicateTrack')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistFrequencyLibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.PositiveSmallIntegerField(default=1)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='musik_lib.Artist')),
                ('library_stat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='musik_lib.LibraryStat')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistFrequencyCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.PositiveSmallIntegerField(default=1)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='musik_lib.Artist')),
                ('collection_stat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='musik_lib.CollectionStat')),
            ],
        ),
        migrations.AddConstraint(
            model_name='artistfrequencylibrary',
            constraint=models.UniqueConstraint(fields=('artist', 'library_stat'), name='Artist And Library'),
        ),
        migrations.AddConstraint(
            model_name='artistfrequencycollection',
            constraint=models.UniqueConstraint(fields=('artist', 'collection_stat'), name='Artist And Collection'),
        ),
    ]
